/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.gui;

import client.core.Connection;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javafx.util.Pair;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import org.json.simple.JSONObject;

/**
 *
 * @author edmundophie
 */
public class MapPane extends javax.swing.JPanel implements WindowPane {
    private javax.swing.JPanel cards;
    private BufferedImage gridImage;
    private BufferedImage characterImage;
    private Dimension mapSize;
    /**
     * Creates new form MapPane
     */
    public MapPane(javax.swing.JPanel cards) {
        this.cards = cards;
        initComponents();
        setupMap();
    }

        private void setupMap() {
        try {
            gridImage = ImageIO.read(new File(GrandQuest.gridFile));
            characterImage = ImageIO.read(new File(GrandQuest.characterFile));
        } catch (IOException ex) {
            System.err.println(ex);
        };
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        // Draw map
        for(int i=0;i<mapSize.height;++i) {
            for(int j=0;j<mapSize.width;++j)
                g.drawImage(gridImage, 10+j*100, 10+i*100, null);
        }
        // Set position
        int paddingLeft = 22;
        int paddingTop = 12;
        int playerPosX = GrandQuest.SESSION.getPosX();
        int playerPosY = GrandQuest.SESSION.getPosY();
        playerPosLbl.setText(playerPosX + ", " + playerPosY);
        g.drawImage(characterImage, paddingLeft+playerPosX*100, paddingTop+playerPosY*100, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        posYTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        posXTextField = new javax.swing.JTextField();
        mapNameLbl = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        playerPosLbl = new javax.swing.JLabel();
        timeLbl = new javax.swing.JLabel();
        currTimeLbl = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(posYTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 190, 70, 40));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel3.setText("Current time :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 90, -1, -1));
        add(posXTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 190, 70, 40));

        mapNameLbl.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add(mapNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, -1, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel7.setText("Time : ");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 50, -1, -1));

        jButton2.setText("Logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 530, 140, 40));

        jButton3.setText("Move");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 150, 140, 40));

        jButton4.setText("Field");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 230, 140, 40));

        jButton5.setText("Inventory");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 290, 140, 40));

        jButton6.setText("Mix Item");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 330, 140, 40));

        jButton7.setText("Tradebox");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 390, 140, 40));

        jButton8.setText("Offer");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 430, 140, 40));

        jButton9.setText("Find Item");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 470, 140, 40));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel8.setText("Map :");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel9.setText("Position : ");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 30, -1, -1));

        playerPosLbl.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        add(playerPosLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 30, -1, -1));

        timeLbl.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        add(timeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 70, -1, -1));

        currTimeLbl.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        add(currTimeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 110, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        GrandQuest.SESSION.logout();
        ((CardLayout) cards.getLayout()).show(cards, MainFrame.LOGIN);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JSONObject request = new JSONObject();
        request.put("method", "move");
        request.put("token", GrandQuest.SESSION.getToken());
        int newX = Integer.parseInt(posXTextField.getText());
        int newY = Integer.parseInt(posYTextField.getText());
        request.put("x", newX);
        request.put("y", newY);
        Connection conn = new Connection();
        JSONObject response = conn.sendToServer(request);
        if(response.get("status").equals(GrandQuest.STATUS_OK)) { 
            GrandQuest.SESSION.setTime(((Long)response.get("time")).intValue());    // Update time
            GrandQuest.SESSION.setPosition(new Pair(newX, newY));
            // Set date label
            Date date = new Date((GrandQuest.SESSION.getTime())*1000);
            DateFormat format = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            String time = format.format(date);
            timeLbl.setText(time);
            repaint();
//            revalidate();
            
        } else if(response.get("status").equals(GrandQuest.STATUS_FAIL)) { 
            JOptionPane.showMessageDialog(this, "Perpindahan gagal! " + response.get("description"), "MOVE FAILED", JOptionPane.ERROR_MESSAGE);
        } else { // STATUS_ERROR
            JOptionPane.showMessageDialog(this, "Server return an error status", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JSONObject request = new JSONObject();
        request.put("method", "field");
        request.put("token", GrandQuest.SESSION.getToken());
        Connection conn = new Connection();
        JSONObject response = conn.sendToServer(request);
        if(response.get("status").equals(GrandQuest.STATUS_OK)) { 
            int itemObtained = Integer.parseInt(response.get("item").toString());
            GrandQuest.SESSION.refreshItemCount();
            JOptionPane.showMessageDialog(this, "Anda mendapatkan item no " + itemObtained, "ITEM OBTAINED", JOptionPane.INFORMATION_MESSAGE);
        } else if(response.get("status").equals(GrandQuest.STATUS_FAIL)) { 
            JOptionPane.showMessageDialog(this, "Item gagal diambil! " + response.get("description"), "FIELD FAILED", JOptionPane.ERROR_MESSAGE);
        } else 
            JOptionPane.showMessageDialog(this, "Server return an error status", "FIELD ERROR", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        GrandQuest.FRAME.getPane(MainFrame.INVENTORY).reloadContent();
        ((CardLayout) cards.getLayout()).show(cards, MainFrame.INVENTORY);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        GrandQuest.FRAME.getPane(MainFrame.MIXING).reloadContent();
        ((CardLayout) cards.getLayout()).show(cards, MainFrame.MIXING);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        GrandQuest.FRAME.getPane(MainFrame.TRADEBOX).reloadContent();
        ((CardLayout) cards.getLayout()).show(cards, MainFrame.TRADEBOX);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        GrandQuest.FRAME.getPane(MainFrame.OFFER).reloadContent();
        ((CardLayout) cards.getLayout()).show(cards, MainFrame.OFFER);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        GrandQuest.FRAME.getPane(MainFrame.FIND).reloadContent();
        ((CardLayout) cards.getLayout()).show(cards, MainFrame.FIND);
    }//GEN-LAST:event_jButton9ActionPerformed


    @Override
    public void reloadContent() {
        JSONObject request = new JSONObject();
        request.put("method", "map");
        request.put("token", GrandQuest.SESSION.getToken());
        Connection conn = new Connection();
        JSONObject response = conn.sendToServer(request);
        if(response.get("status").equals(GrandQuest.STATUS_OK)) {
            // Draw map
            mapSize = new Dimension(Integer.parseInt(response.get("width").toString()), Integer.parseInt(response.get("height").toString()));
            mapNameLbl.setText(response.get("name").toString());
            paintComponent(this.getGraphics());
            
            // Set date label
            Date date = new Date((GrandQuest.SESSION.getTime())*1000);
            DateFormat format = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            String time = format.format(date);
            timeLbl.setText(time);
        
            // Show current time
            final DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            int interval = 1000; // 1000 ms

            new Timer(interval, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    Calendar now = Calendar.getInstance();
                    currTimeLbl.setText(dateFormat.format(now.getTime()));
                }
            }).start();
            
        } else { // STATUS_ERROR
            JOptionPane.showMessageDialog(this, "Error on geting map", "MAP ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currTimeLbl;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel mapNameLbl;
    private javax.swing.JLabel playerPosLbl;
    private javax.swing.JTextField posXTextField;
    private javax.swing.JTextField posYTextField;
    private javax.swing.JLabel timeLbl;
    // End of variables declaration//GEN-END:variables
}
